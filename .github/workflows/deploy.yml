name: Deploy Django to GCP with Docker - Production

on:
  push:
    branches:
      - main

env:
  DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
  DATABASE_USER: ${{ secrets.DATABASE_USER }}
  DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
  DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
  DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
  SECRET_KEY: ${{ secrets.SECRET_KEY }}
  ENVIRONMENT: ${{ secrets.ENVIRONMENT }}
  GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
  CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
  CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
  CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Django tests
        run: |
          python manage.py test --keepdb

  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: |
          docker build \
            -t ${{ secrets.DOCKER_IMAGE_NAME }}:latest \
            --build-arg DATABASE_NAME=$DATABASE_NAME \
            --build-arg DATABASE_USER=$DATABASE_USER \
            --build-arg DATABASE_PASSWORD=$DATABASE_PASSWORD \
            --build-arg DATABASE_HOST=$DATABASE_HOST \
            --build-arg DATABASE_PORT=$DATABASE_PORT \
            --build-arg SECRET_KEY=$SECRET_KEY \
            --build-arg CLOUDINARY_CLOUD_NAME=$CLOUDINARY_CLOUD_NAME \
            --build-arg CLOUDINARY_API_KEY=$CLOUDINARY_API_KEY \
            --build-arg CLOUDINARY_API_SECRET=$CLOUDINARY_API_SECRET \
            --build-arg GOOGLE_APPLICATION_CREDENTIALS='${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}' \
            --build-arg ENVIRONMENT=$ENVIRONMENT \
            . --no-cache

      - name: Tag Docker image
        run: docker tag ${{ secrets.DOCKER_IMAGE_NAME }}:latest ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest

  deploy:
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v0.3.0
        with:
          project_id: ${{ secrets.GCE_PROJECT_ID }}
          service_account_key: ${{ secrets.GCE_SA_KEY }}
          export_default_credentials: true

      - name: Access gcloud CLI
        run: |
          gcloud auth configure-docker

      - name: SSH into GCP instance and deploy Django
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.GCE_INSTANCE_IP }}
          username: ${{ secrets.GCE_SSH_USERNAME }}
          key: ${{ secrets.GCE_SSH_PRIVATE_KEY }}
          script: |
            docker stop ${{ secrets.DOCKER_CONTAINER_NAME }} || true
            docker rm ${{ secrets.DOCKER_CONTAINER_NAME }} || true
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest
            docker run -dt --restart unless-stopped -p 8080:8000 -p 8000:8000 --name ${{ secrets.DOCKER_CONTAINER_NAME }} ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest
            docker image prune -f
            sudo systemctl stop nginx
            sudo systemctl start nginx
